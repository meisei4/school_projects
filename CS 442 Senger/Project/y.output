Terminals unused in grammar

   BOOL_TOK
   AND_TOK
   OR_TOK
   BREAK_TOK
   LOOP_TOK


Grammar

    0 $accept: Module $end

    1 Module: DeclImpls

    2 DeclImpls: Decl DeclImpls
    3          | Impl DeclImpls
    4          | %empty

    5 Decl: DECL_TOK DeclList ':' Type ';'

    6 DeclList: DeclItem ',' DeclList
    7         | DeclItem

    8 DeclItem: Id
    9         | Id FuncArgTypes

   10 Id: IDENT_TOK

   11 Get: GET_TOK '(' INT_TOK ')'

   12 FuncArgTypes: '(' ')'

   13 Type: INT_TOK
   14     | CHR_TOK

   15 Impl: IMPL_TOK Id FuncArgNames FuncBody ';'

   16 FuncArgNames: '(' ')'

   17 FuncBody: '{' FuncStmts '}'

   18 FuncStmts: Stmt ';' FuncStmts
   19          | %empty

   20 Stmt: IfStmt
   21     | ForStmt
   22     | WhileStmt
   23     | AssignStmt
   24     | Put
   25     | Crement

   26 Crement: Increment
   27        | Decrement

   28 Increment: Id '+' '+'

   29 Decrement: Id '-' '-'

   30 IfStmt: IF_TOK '(' Cond ')' FuncBody ELSE_TOK FuncBody
   31       | IF_TOK '(' Cond ')' FuncBody

   32 WhileStmt: WHILE_TOK '(' Cond ')' FuncBody

   33 Cond: Boolean

   34 Boolean: Expr '<' Expr
   35        | Expr '>' Expr
   36        | Expr GTE_TOK Expr
   37        | Expr LTE_TOK Expr
   38        | Expr NOTEQUAL_TOK Expr
   39        | Expr EQUAL_TOK Expr

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' Crement ';' ')' FuncBody

   41 Put: PUT_TOK '(' Expr ')'

   42 AssignStmt: Id '=' Expr

   43 Expr: Expr AddOp Term
   44     | Term
   45     | Get
   46     | CHRLIT_TOK
   47     | STRLIT_TOK

   48 Term: Term MultOp Factor
   49     | Factor

   50 Factor: '(' Expr ')'
   51       | '-' Factor
   52       | INTLIT_TOK
   53       | IDENT_TOK

   54 AddOp: '+'
   55      | '-'

   56 MultOp: '*'
   57       | '/'


Terminals, with rules where they appear

$end (0) 0
IDENT_TOK (1) 10 53
DECL_TOK (2) 5
IMPL_TOK (3) 15
INT_TOK (4) 11 13
CHR_TOK (5) 14
INTLIT_TOK (6) 52
CHRLIT_TOK (7) 46
GET_TOK (8) 11
PUT_TOK (9) 41
IF_TOK (10) 30 31
ELSE_TOK (11) 30
NOTEQUAL_TOK (12) 38
WHILE_TOK (13) 32
EQUAL_TOK (14) 39
STRLIT_TOK (15) 47
BOOL_TOK (16)
AND_TOK (17)
OR_TOK (18)
FOR_TOK (19) 40
LTE_TOK (20) 37
GTE_TOK (21) 36
BREAK_TOK (22)
LOOP_TOK (23)
'(' (40) 11 12 16 30 31 32 40 41 50
')' (41) 11 12 16 30 31 32 40 41 50
'*' (42) 56
'+' (43) 28 54
',' (44) 6
'-' (45) 29 51 55
'/' (47) 57
':' (58) 5
';' (59) 5 15 18 40
'<' (60) 34
'=' (61) 42
'>' (62) 35
'{' (123) 17
'}' (125) 17
error (256)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Module (41)
    on left: 1, on right: 0
DeclImpls <InstrSeq> (42)
    on left: 2 3 4, on right: 1 2 3
Decl (43)
    on left: 5, on right: 2
DeclList <IdList> (44)
    on left: 6 7, on right: 5 6
DeclItem <IdList> (45)
    on left: 8 9, on right: 6 7
Id <Text> (46)
    on left: 10, on right: 8 9 15 28 29 42
Get <ExprResult> (47)
    on left: 11, on right: 45
FuncArgTypes (48)
    on left: 12, on right: 9
Type <BaseType> (49)
    on left: 13 14, on right: 5
Impl (50)
    on left: 15, on right: 3
FuncArgNames (51)
    on left: 16, on right: 15
FuncBody <InstrSeq> (52)
    on left: 17, on right: 15 30 31 32 40
FuncStmts <InstrSeq> (53)
    on left: 18 19, on right: 17 18
Stmt <InstrSeq> (54)
    on left: 20 21 22 23 24 25, on right: 18
Crement <InstrSeq> (55)
    on left: 26 27, on right: 25 40
Increment <InstrSeq> (56)
    on left: 28, on right: 26
Decrement <InstrSeq> (57)
    on left: 29, on right: 27
IfStmt <InstrSeq> (58)
    on left: 30 31, on right: 20
WhileStmt <InstrSeq> (59)
    on left: 32, on right: 22
Cond <CondResult> (60)
    on left: 33, on right: 30 31 32 40
Boolean <CondResult> (61)
    on left: 34 35 36 37 38 39, on right: 33
ForStmt <InstrSeq> (62)
    on left: 40, on right: 21
Put <InstrSeq> (63)
    on left: 41, on right: 24
AssignStmt <InstrSeq> (64)
    on left: 42, on right: 23 40
Expr <ExprResult> (65)
    on left: 43 44 45 46 47, on right: 34 35 36 37 38 39 41 42 43 50
Term <ExprResult> (66)
    on left: 48 49, on right: 43 44 48
Factor <ExprResult> (67)
    on left: 50 51 52 53, on right: 48 49 51
AddOp <Op> (68)
    on left: 54 55, on right: 43
MultOp <Op> (69)
    on left: 56 57, on right: 48


State 0

    0 $accept: . Module $end

    DECL_TOK  shift, and go to state 1
    IMPL_TOK  shift, and go to state 2

    $default  reduce using rule 4 (DeclImpls)

    Module     go to state 3
    DeclImpls  go to state 4
    Decl       go to state 5
    Impl       go to state 6


State 1

    5 Decl: DECL_TOK . DeclList ':' Type ';'

    IDENT_TOK  shift, and go to state 7

    DeclList  go to state 8
    DeclItem  go to state 9
    Id        go to state 10


State 2

   15 Impl: IMPL_TOK . Id FuncArgNames FuncBody ';'

    IDENT_TOK  shift, and go to state 7

    Id  go to state 11


State 3

    0 $accept: Module . $end

    $end  shift, and go to state 12


State 4

    1 Module: DeclImpls .

    $default  reduce using rule 1 (Module)


State 5

    2 DeclImpls: Decl . DeclImpls

    DECL_TOK  shift, and go to state 1
    IMPL_TOK  shift, and go to state 2

    $default  reduce using rule 4 (DeclImpls)

    DeclImpls  go to state 13
    Decl       go to state 5
    Impl       go to state 6


State 6

    3 DeclImpls: Impl . DeclImpls

    DECL_TOK  shift, and go to state 1
    IMPL_TOK  shift, and go to state 2

    $default  reduce using rule 4 (DeclImpls)

    DeclImpls  go to state 14
    Decl       go to state 5
    Impl       go to state 6


State 7

   10 Id: IDENT_TOK .

    $default  reduce using rule 10 (Id)


State 8

    5 Decl: DECL_TOK DeclList . ':' Type ';'

    ':'  shift, and go to state 15


State 9

    6 DeclList: DeclItem . ',' DeclList
    7         | DeclItem .

    ','  shift, and go to state 16

    $default  reduce using rule 7 (DeclList)


State 10

    8 DeclItem: Id .
    9         | Id . FuncArgTypes

    '('  shift, and go to state 17

    $default  reduce using rule 8 (DeclItem)

    FuncArgTypes  go to state 18


State 11

   15 Impl: IMPL_TOK Id . FuncArgNames FuncBody ';'

    '('  shift, and go to state 19

    FuncArgNames  go to state 20


State 12

    0 $accept: Module $end .

    $default  accept


State 13

    2 DeclImpls: Decl DeclImpls .

    $default  reduce using rule 2 (DeclImpls)


State 14

    3 DeclImpls: Impl DeclImpls .

    $default  reduce using rule 3 (DeclImpls)


State 15

    5 Decl: DECL_TOK DeclList ':' . Type ';'

    INT_TOK  shift, and go to state 21
    CHR_TOK  shift, and go to state 22

    Type  go to state 23


State 16

    6 DeclList: DeclItem ',' . DeclList

    IDENT_TOK  shift, and go to state 7

    DeclList  go to state 24
    DeclItem  go to state 9
    Id        go to state 10


State 17

   12 FuncArgTypes: '(' . ')'

    ')'  shift, and go to state 25


State 18

    9 DeclItem: Id FuncArgTypes .

    $default  reduce using rule 9 (DeclItem)


State 19

   16 FuncArgNames: '(' . ')'

    ')'  shift, and go to state 26


State 20

   15 Impl: IMPL_TOK Id FuncArgNames . FuncBody ';'

    '{'  shift, and go to state 27

    FuncBody  go to state 28


State 21

   13 Type: INT_TOK .

    $default  reduce using rule 13 (Type)


State 22

   14 Type: CHR_TOK .

    $default  reduce using rule 14 (Type)


State 23

    5 Decl: DECL_TOK DeclList ':' Type . ';'

    ';'  shift, and go to state 29


State 24

    6 DeclList: DeclItem ',' DeclList .

    $default  reduce using rule 6 (DeclList)


State 25

   12 FuncArgTypes: '(' ')' .

    $default  reduce using rule 12 (FuncArgTypes)


State 26

   16 FuncArgNames: '(' ')' .

    $default  reduce using rule 16 (FuncArgNames)


State 27

   17 FuncBody: '{' . FuncStmts '}'

    IDENT_TOK  shift, and go to state 7
    PUT_TOK    shift, and go to state 30
    IF_TOK     shift, and go to state 31
    WHILE_TOK  shift, and go to state 32
    FOR_TOK    shift, and go to state 33

    $default  reduce using rule 19 (FuncStmts)

    Id          go to state 34
    FuncStmts   go to state 35
    Stmt        go to state 36
    Crement     go to state 37
    Increment   go to state 38
    Decrement   go to state 39
    IfStmt      go to state 40
    WhileStmt   go to state 41
    ForStmt     go to state 42
    Put         go to state 43
    AssignStmt  go to state 44


State 28

   15 Impl: IMPL_TOK Id FuncArgNames FuncBody . ';'

    ';'  shift, and go to state 45


State 29

    5 Decl: DECL_TOK DeclList ':' Type ';' .

    $default  reduce using rule 5 (Decl)


State 30

   41 Put: PUT_TOK . '(' Expr ')'

    '('  shift, and go to state 46


State 31

   30 IfStmt: IF_TOK . '(' Cond ')' FuncBody ELSE_TOK FuncBody
   31       | IF_TOK . '(' Cond ')' FuncBody

    '('  shift, and go to state 47


State 32

   32 WhileStmt: WHILE_TOK . '(' Cond ')' FuncBody

    '('  shift, and go to state 48


State 33

   40 ForStmt: FOR_TOK . '(' AssignStmt ';' Cond ';' Crement ';' ')' FuncBody

    '('  shift, and go to state 49


State 34

   28 Increment: Id . '+' '+'
   29 Decrement: Id . '-' '-'
   42 AssignStmt: Id . '=' Expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '='  shift, and go to state 52


State 35

   17 FuncBody: '{' FuncStmts . '}'

    '}'  shift, and go to state 53


State 36

   18 FuncStmts: Stmt . ';' FuncStmts

    ';'  shift, and go to state 54


State 37

   25 Stmt: Crement .

    $default  reduce using rule 25 (Stmt)


State 38

   26 Crement: Increment .

    $default  reduce using rule 26 (Crement)


State 39

   27 Crement: Decrement .

    $default  reduce using rule 27 (Crement)


State 40

   20 Stmt: IfStmt .

    $default  reduce using rule 20 (Stmt)


State 41

   22 Stmt: WhileStmt .

    $default  reduce using rule 22 (Stmt)


State 42

   21 Stmt: ForStmt .

    $default  reduce using rule 21 (Stmt)


State 43

   24 Stmt: Put .

    $default  reduce using rule 24 (Stmt)


State 44

   23 Stmt: AssignStmt .

    $default  reduce using rule 23 (Stmt)


State 45

   15 Impl: IMPL_TOK Id FuncArgNames FuncBody ';' .

    $default  reduce using rule 15 (Impl)


State 46

   41 Put: PUT_TOK '(' . Expr ')'

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 63
    Term    go to state 64
    Factor  go to state 65


State 47

   30 IfStmt: IF_TOK '(' . Cond ')' FuncBody ELSE_TOK FuncBody
   31       | IF_TOK '(' . Cond ')' FuncBody

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get      go to state 62
    Cond     go to state 66
    Boolean  go to state 67
    Expr     go to state 68
    Term     go to state 64
    Factor   go to state 65


State 48

   32 WhileStmt: WHILE_TOK '(' . Cond ')' FuncBody

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get      go to state 62
    Cond     go to state 69
    Boolean  go to state 67
    Expr     go to state 68
    Term     go to state 64
    Factor   go to state 65


State 49

   40 ForStmt: FOR_TOK '(' . AssignStmt ';' Cond ';' Crement ';' ')' FuncBody

    IDENT_TOK  shift, and go to state 7

    Id          go to state 70
    AssignStmt  go to state 71


State 50

   28 Increment: Id '+' . '+'

    '+'  shift, and go to state 72


State 51

   29 Decrement: Id '-' . '-'

    '-'  shift, and go to state 73


State 52

   42 AssignStmt: Id '=' . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 74
    Term    go to state 64
    Factor  go to state 65


State 53

   17 FuncBody: '{' FuncStmts '}' .

    $default  reduce using rule 17 (FuncBody)


State 54

   18 FuncStmts: Stmt ';' . FuncStmts

    IDENT_TOK  shift, and go to state 7
    PUT_TOK    shift, and go to state 30
    IF_TOK     shift, and go to state 31
    WHILE_TOK  shift, and go to state 32
    FOR_TOK    shift, and go to state 33

    $default  reduce using rule 19 (FuncStmts)

    Id          go to state 34
    FuncStmts   go to state 75
    Stmt        go to state 36
    Crement     go to state 37
    Increment   go to state 38
    Decrement   go to state 39
    IfStmt      go to state 40
    WhileStmt   go to state 41
    ForStmt     go to state 42
    Put         go to state 43
    AssignStmt  go to state 44


State 55

   53 Factor: IDENT_TOK .

    $default  reduce using rule 53 (Factor)


State 56

   52 Factor: INTLIT_TOK .

    $default  reduce using rule 52 (Factor)


State 57

   46 Expr: CHRLIT_TOK .

    $default  reduce using rule 46 (Expr)


State 58

   11 Get: GET_TOK . '(' INT_TOK ')'

    '('  shift, and go to state 76


State 59

   47 Expr: STRLIT_TOK .

    $default  reduce using rule 47 (Expr)


State 60

   50 Factor: '(' . Expr ')'

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 77
    Term    go to state 64
    Factor  go to state 65


State 61

   51 Factor: '-' . Factor

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Factor  go to state 78


State 62

   45 Expr: Get .

    $default  reduce using rule 45 (Expr)


State 63

   41 Put: PUT_TOK '(' Expr . ')'
   43 Expr: Expr . AddOp Term

    ')'  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    AddOp  go to state 82


State 64

   44 Expr: Term .
   48 Term: Term . MultOp Factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 44 (Expr)

    MultOp  go to state 85


State 65

   49 Term: Factor .

    $default  reduce using rule 49 (Term)


State 66

   30 IfStmt: IF_TOK '(' Cond . ')' FuncBody ELSE_TOK FuncBody
   31       | IF_TOK '(' Cond . ')' FuncBody

    ')'  shift, and go to state 86


State 67

   33 Cond: Boolean .

    $default  reduce using rule 33 (Cond)


State 68

   34 Boolean: Expr . '<' Expr
   35        | Expr . '>' Expr
   36        | Expr . GTE_TOK Expr
   37        | Expr . LTE_TOK Expr
   38        | Expr . NOTEQUAL_TOK Expr
   39        | Expr . EQUAL_TOK Expr
   43 Expr: Expr . AddOp Term

    NOTEQUAL_TOK  shift, and go to state 87
    EQUAL_TOK     shift, and go to state 88
    LTE_TOK       shift, and go to state 89
    GTE_TOK       shift, and go to state 90
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '<'           shift, and go to state 91
    '>'           shift, and go to state 92

    AddOp  go to state 82


State 69

   32 WhileStmt: WHILE_TOK '(' Cond . ')' FuncBody

    ')'  shift, and go to state 93


State 70

   42 AssignStmt: Id . '=' Expr

    '='  shift, and go to state 52


State 71

   40 ForStmt: FOR_TOK '(' AssignStmt . ';' Cond ';' Crement ';' ')' FuncBody

    ';'  shift, and go to state 94


State 72

   28 Increment: Id '+' '+' .

    $default  reduce using rule 28 (Increment)


State 73

   29 Decrement: Id '-' '-' .

    $default  reduce using rule 29 (Decrement)


State 74

   42 AssignStmt: Id '=' Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 42 (AssignStmt)

    AddOp  go to state 82


State 75

   18 FuncStmts: Stmt ';' FuncStmts .

    $default  reduce using rule 18 (FuncStmts)


State 76

   11 Get: GET_TOK '(' . INT_TOK ')'

    INT_TOK  shift, and go to state 95


State 77

   43 Expr: Expr . AddOp Term
   50 Factor: '(' Expr . ')'

    ')'  shift, and go to state 96
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    AddOp  go to state 82


State 78

   51 Factor: '-' Factor .

    $default  reduce using rule 51 (Factor)


State 79

   41 Put: PUT_TOK '(' Expr ')' .

    $default  reduce using rule 41 (Put)


State 80

   54 AddOp: '+' .

    $default  reduce using rule 54 (AddOp)


State 81

   55 AddOp: '-' .

    $default  reduce using rule 55 (AddOp)


State 82

   43 Expr: Expr AddOp . Term

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Term    go to state 97
    Factor  go to state 65


State 83

   56 MultOp: '*' .

    $default  reduce using rule 56 (MultOp)


State 84

   57 MultOp: '/' .

    $default  reduce using rule 57 (MultOp)


State 85

   48 Term: Term MultOp . Factor

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Factor  go to state 98


State 86

   30 IfStmt: IF_TOK '(' Cond ')' . FuncBody ELSE_TOK FuncBody
   31       | IF_TOK '(' Cond ')' . FuncBody

    '{'  shift, and go to state 27

    FuncBody  go to state 99


State 87

   38 Boolean: Expr NOTEQUAL_TOK . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 100
    Term    go to state 64
    Factor  go to state 65


State 88

   39 Boolean: Expr EQUAL_TOK . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 101
    Term    go to state 64
    Factor  go to state 65


State 89

   37 Boolean: Expr LTE_TOK . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 102
    Term    go to state 64
    Factor  go to state 65


State 90

   36 Boolean: Expr GTE_TOK . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 103
    Term    go to state 64
    Factor  go to state 65


State 91

   34 Boolean: Expr '<' . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 104
    Term    go to state 64
    Factor  go to state 65


State 92

   35 Boolean: Expr '>' . Expr

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get     go to state 62
    Expr    go to state 105
    Term    go to state 64
    Factor  go to state 65


State 93

   32 WhileStmt: WHILE_TOK '(' Cond ')' . FuncBody

    '{'  shift, and go to state 27

    FuncBody  go to state 106


State 94

   40 ForStmt: FOR_TOK '(' AssignStmt ';' . Cond ';' Crement ';' ')' FuncBody

    IDENT_TOK   shift, and go to state 55
    INTLIT_TOK  shift, and go to state 56
    CHRLIT_TOK  shift, and go to state 57
    GET_TOK     shift, and go to state 58
    STRLIT_TOK  shift, and go to state 59
    '('         shift, and go to state 60
    '-'         shift, and go to state 61

    Get      go to state 62
    Cond     go to state 107
    Boolean  go to state 67
    Expr     go to state 68
    Term     go to state 64
    Factor   go to state 65


State 95

   11 Get: GET_TOK '(' INT_TOK . ')'

    ')'  shift, and go to state 108


State 96

   50 Factor: '(' Expr ')' .

    $default  reduce using rule 50 (Factor)


State 97

   43 Expr: Expr AddOp Term .
   48 Term: Term . MultOp Factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 43 (Expr)

    MultOp  go to state 85


State 98

   48 Term: Term MultOp Factor .

    $default  reduce using rule 48 (Term)


State 99

   30 IfStmt: IF_TOK '(' Cond ')' FuncBody . ELSE_TOK FuncBody
   31       | IF_TOK '(' Cond ')' FuncBody .

    ELSE_TOK  shift, and go to state 109

    $default  reduce using rule 31 (IfStmt)


State 100

   38 Boolean: Expr NOTEQUAL_TOK Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 38 (Boolean)

    AddOp  go to state 82


State 101

   39 Boolean: Expr EQUAL_TOK Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 39 (Boolean)

    AddOp  go to state 82


State 102

   37 Boolean: Expr LTE_TOK Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 37 (Boolean)

    AddOp  go to state 82


State 103

   36 Boolean: Expr GTE_TOK Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 36 (Boolean)

    AddOp  go to state 82


State 104

   34 Boolean: Expr '<' Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 34 (Boolean)

    AddOp  go to state 82


State 105

   35 Boolean: Expr '>' Expr .
   43 Expr: Expr . AddOp Term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 35 (Boolean)

    AddOp  go to state 82


State 106

   32 WhileStmt: WHILE_TOK '(' Cond ')' FuncBody .

    $default  reduce using rule 32 (WhileStmt)


State 107

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond . ';' Crement ';' ')' FuncBody

    ';'  shift, and go to state 110


State 108

   11 Get: GET_TOK '(' INT_TOK ')' .

    $default  reduce using rule 11 (Get)


State 109

   30 IfStmt: IF_TOK '(' Cond ')' FuncBody ELSE_TOK . FuncBody

    '{'  shift, and go to state 27

    FuncBody  go to state 111


State 110

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' . Crement ';' ')' FuncBody

    IDENT_TOK  shift, and go to state 7

    Id         go to state 112
    Crement    go to state 113
    Increment  go to state 38
    Decrement  go to state 39


State 111

   30 IfStmt: IF_TOK '(' Cond ')' FuncBody ELSE_TOK FuncBody .

    $default  reduce using rule 30 (IfStmt)


State 112

   28 Increment: Id . '+' '+'
   29 Decrement: Id . '-' '-'

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51


State 113

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' Crement . ';' ')' FuncBody

    ';'  shift, and go to state 114


State 114

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' Crement ';' . ')' FuncBody

    ')'  shift, and go to state 115


State 115

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' Crement ';' ')' . FuncBody

    '{'  shift, and go to state 27

    FuncBody  go to state 116


State 116

   40 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' Crement ';' ')' FuncBody .

    $default  reduce using rule 40 (ForStmt)
